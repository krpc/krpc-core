load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@rules_dotnet//dotnet:defs.bzl", "csharp_library", "csharp_nunit_test")
load("//tools/service_definitions:defs.bzl", "service_definitions")
load("//:config.bzl", "version")

csharp_library(
    name = "core",
    srcs = glob(["src/**/*.cs"]) + [
        ":assembly_info",
        "//protobuf:krpc_csharp",
    ],
    out = "KRPC.Core",
    private_deps = ["@paket.nuget_deps//netstandard.library.ref"],
    target_frameworks = ["netstandard2.1"],
    treat_warnings_as_errors = True,
    visibility = ["//visibility:public"],
    warning_level = 4,
    deps = [
        "//:google_protobuf",
        "//:krpc_io_ports",
    ],
)

expand_template(
    name = "assembly_info",
    out = "src/AssemblyInfo.cs",
    substitutions = {"{VERSION}": version},
    template = "src/AssemblyInfo.cs.tmpl",
    visibility = ["//visibility:public"],
)

service_definitions(
    name = "service_definitions",
    srcs = [":core"],
    out = "KRPC.json",
    service = "KRPC",
    visibility = ["//visibility:public"],
)

test_suite(
    name = "test",
    tests = [
        ":core_test",
        ":lint",
    ],
)

csharp_nunit_test(
    name = "core_test",
    srcs = glob(["test/**/*.cs"]),
    out = "KRPC.Core.Test",
    private_deps = ["@paket.nuget_deps//microsoft.netcore.app.ref"],
    target_frameworks = ["net6.0"],
    treat_warnings_as_errors = True,
    warning_level = 4,
    warnings_not_as_errors = ["CS1591"],
    deps = [
        ":core",
        "//:google_protobuf",
        "//:krpc_io_ports",
        "@paket.nuget_deps//moq",
        "@paket.nuget_deps//newtonsoft.json",
    ],
)

test_suite(
    name = "lint",
    # TODO: use dotnet analyzers and dotnet format
    tests = [],
)
